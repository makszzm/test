<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
<context:annotation-config />
	<!-- 可以扫描controller、service... 这里指定controller包 就不用配置ItemsController3了 -->
	<context:component-scan base-package="com.sky.controller"></context:component-scan>

	<!-- 静态资源解析包括： js、css、img。。 -->
	<!-- <mvc:resources location="/js/" mapping="/js/**/" /> -->
	<mvc:default-servlet-handler />

	<mvc:annotation-driven conversion-service="conversionService"
		validator="validator"></mvc:annotation-driven>
	<!-- 视图解析器 解析jsp，默认使用jstl标签，classpath下的得有jstl的包 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<!-- 配置jsp路径后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 自定义参数绑定 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<bean class="com.sky.converter.CustomDateConverter"></bean>
			</list>
		</property>
	</bean>

	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	<!-- 全局异常处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器，如果你配置了多个实现类，也只会有一个起作用 -->
	<bean class="com.sky.exceptionResolver.CustomExceptionResolver"></bean>


	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="maxUploadSize">
			<value>5242880</value>
		</property>
	</bean>

	<!--拦截器 -->
	
	<!--  <mvc:interceptors> -->
		<!--多个拦截器,顺序执行 -->
		<!-- 登陆认证拦截器 -->
	<!-- 	<mvc:interceptor> <mvc:mapping path="/**" /> <bean class="com.sky.interceptor.LoginInterceptor"></bean> 
			</mvc:interceptor>-->
		<!-- 微信拦截器 -->
	<!--	<mvc:interceptor>-->
			<!-- /**表示所有url包括子url路径 -->
		<!--		<mvc:mapping path="/**" />
			<bean class="com.sky.interceptor.WxInterceptor"></bean>
		</mvc:interceptor>
		 <mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.sky.interceptor.HandlerInterceptor2"></bean>
		</mvc:interceptor> 
	</mvc:interceptors>-->
</beans>